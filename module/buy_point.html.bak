<?php
$meta_title = Configure::read('html.cart');
$meta_keywords = Configure::read('html.cart');
$meta_description = Configure::read('html.cart');

$this->set('title_for_layout',$meta_title);
$this->Html->meta('keywords', $meta_keywords, array('inline' => false));
$this->Html->meta('description', $meta_description, array('inline' => false));

$this->Html->css('/css/style.css', null, array('inline' => false));

// ポイント
$arrPointList = Configure::read('arrPointList');

// ポイント購入金額
$arrPointRateList = Configure::read('arrPointRateList');


// 支払方法
$arrPaymentMethod = Configure::read('arrPaymentMethod');

$fruitsTable = TableRegistry::getTableLocator()->get('point_purchase_history');


dump($fruitsTable);

$arrTopicPath[] = array('商品一覧' => '');
$this->set('arrTopicPath',$arrTopicPath);

$code_area = <<< EOF
EOF;
$this->assign('script_area', $code_area);
?>

<section>
  <h2 class="f25 mb40">カート</h2>
  <?php echo $this->Form->create('Item',
                            array('id' => 'purchase_points',
                           	      'url' => '/cart/buy_point/',
                                  'type' => 'get',
                                  'name' => 'purchase_points'
)); ?>

<input type="hidden" name="NAME1" value="<?= $arrMemberInfo['Member']['name'] ?>">
<input type="hidden" name="NAME2" value="　">
<input type="hidden" name="N1" value="ポイント購入">

  <h3 class="ml30 mb20 mt50"><span>ポイント購入</span></h3>
  <table class="point mb10">
    <tr class="bg_lightgray">
      <th class="width40">購入金額</th>
      <th class="width40">購入ポイント</th>
      <th></th>
    </tr>
    

    <?php foreach($arrPointRateList as $key => $value){ ?>
    <tr>
      <td>\<?= number_format($value); ?>円</td>
      <td><?= $key ?>&nbsp;PT<span class="red"><?php if( $key=='5750' ) echo '（15％UP!!）'; if( $key=='12000' ) echo '（20％UP!!）'; if( $key=='37500' ) echo '（25％UP!!）'; ?></span></td>
      <td><input type="radio" name="K1" value="<?= $key ?>" class="point_val" <?php if( !empty($_GET['K1']) && $key==$_GET['K1'] ) echo 'checked'; ?>></td>
    </tr>
    <?php } ?>

    
  </table>
  <p class="error-message ml30 error_point"></p>

  <table class="border-all-gray ml30 mb10 mt30 width90">
    <tr class="bg_lightgray">
      <th class="bg_lightgray pr10 pt05 pb05 textcenter border-all-gray width90">決済方法</th>
      <th class="bg_lightgray pr10 pt05 pb05 textcenter border-all-gray width10"></th>
    </tr>
    <?php foreach($arrPaymentMethod as $value => $name): ?>
    <tr>
      <td class="pr10 pt05 pb05 textcenter border-all-gray"><?php echo h($name) ?></td>
      <td class="pr10 pt05 pb05 textcenter border-all-gray"><input type="radio" name="STORE" value="<?php echo $value ?>" class="payment_method" <?php if( !empty($_GET['STORE']) && $value==$_GET['STORE'] ) echo 'checked'; ?>></td>
    </tr>
    <?php endforeach; ?>
  </table>
  <p class="error-message ml30 error_payment_method"></p>

  <p class="textcenter mt30">
  <!--
	<a href="https://www.paydesign.jp/settle/settle3/bp3.dll?IP=D552090520" class="mybtn mybtn03 payment_method_submit">ポイント購入する</a>
-->
	<input type="submit" value="ポイント購入する" class="mybtn mybtn03">

  </p>
  <?php echo $this->Form->end(); ?> </section>

<?php $this->Html->scriptStart(array('inline' => false)); ?>
$(function(){
	$('#purchase_points').submit(function(){
		
		var check_point = check_val( '.point_val' );
		var check_payment_method = check_val( '.payment_method' );
		
		if(!check_point){
			$('.error_point').text('ポイントが選択されていません');
		}else{
			$('.error_point').text('');
		}
		
		if(!check_payment_method){
			$('.error_payment_method').text('決済方法が選択されていません');
		}else{
			$('.error_payment_method').text('');
		}
		
		if( check_point && check_payment_method ){
			
			var add_param;
			if( $('.payment_method').val() ==51 ){
				add_param = '&AUTONO=1&MAIL=<?= $arrMemberInfo['Member']['email'] ?>';
			}
			
			var set_param = "https://www.paydesign.jp/settle/settle3/bp3.dll?IP="+ get_ip() +"&SID=" + get_random() + add_param;
			var set_url = "/cart/buy_point/?url=" + set_param;
			var windowFeatures = "left=0,top=0,width=1138,height=791,toolbar=0,resizable=0";
			window.open( 'about:blank', "payment_method", windowFeatures );
			document.purchase_points.target = "payment_method";
			document.purchase_points.method = "post";
			document.purchase_points.action = set_url;
			document.purchase_points.submit();
		}
		return false;
	});
});


function get_ip(){
	if( $('.payment_method' + ':checked').val() ==51 ){
		return "A552090520";
	}else{
		return "D552090520";
	}
}


function check_val( element ){
	if( $(element + ':checked').length > 0 ){
		return true;
	}else{
		return false;
	}
}

function get_random(){
	//使用文字の定義
	var str = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!#$%&=~/*-+";

	//桁数の定義
	var len = 8;

	//ランダムな文字列の生成
	var result = "";
	for(var i=0;i<len;i++){
	result += str.charAt(Math.floor(Math.random() * str.length));
	}
	return result;
}

<?php $this->Html->scriptEnd(); ?>

